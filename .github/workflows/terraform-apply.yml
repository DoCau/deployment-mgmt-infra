name: terraform-apply

on:
  pull_request:
    branches:
      - '*'
  pull_request_target:
    types:
      - closed
    branches:
      - master

permissions:
  id-token: write
  contents: read

jobs:
  terraform-setup:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ap-southeast-1
          role-to-assume: arn:aws:iam::774305578623:role/github-terraform-role

      - name: Pull terraform.tfvars
        working-directory: environments/dev
        run: |
          aws s3 cp s3://prj-deployment-mgmt-caudt1/envs/dev/terraform.tfvars terraform.tfvars
          pwd
          ls

      - name: Terraform init
        working-directory: environments/dev
        run: terraform init

      - name: Terraform validate
        working-directory: environments/dev
        run: terraform validate

      - name: Terraform plan
        working-directory: environments/dev
        run: terraform plan

  terraform-apply:
    steps:
      - name: Terraform apply
        working-directory: environments/dev
        run: terraform apply

  microservices-setup:
    steps:
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ap-southeast-1 --name deployment-mgmt-dev-eks-cluster

      - name: Create namespace prj-deployment-mgmt
        run: kubectl create namespace prj-deployment-mgmt

      - name: Create MongoDB persistance volume
        working-directory: kubectl/dev/database
        run: kubectl apply -f mongo-pv.yml

      - name: Create MongoDB pod and service
        working-directory: kubectl/dev/database
        run: kubectl apply -f mongodb.yml -n prj-deployment-mgmt

      - name: Create database-service pod and service
        working-directory: kubectl/dev/database-service
        run: kubectl apply -f database-service.yml -n prj-deployment-mgmt

      - name: Create backend-service pod and service
        working-directory: kubectl/dev/backend-service
        run: kubectl apply -f backend-service.yml -n prj-deployment-mgmt

      - name: Create api-gateway pod and service
        working-directory: kubectl/dev/api-gateway
        run: kubectl apply -f api-gateway.yml -n prj-deployment-mgmt

      - name: Create ui-service pod and service
        working-directory: kubectl/dev/ui-service
        run: kubectl apply -f ui-service.yml -n prj-deployment-mgmt

      - name: Wait for services to warm-up
        run: sleep 60
        timeout-minutes: 2

      - name: Get active pods
        run: kubectl get pods -o wide -n prj-deployment-mgmt

      - name: Get active services
        run: kubectl get svc -o wide -n prj-deployment-mgmt